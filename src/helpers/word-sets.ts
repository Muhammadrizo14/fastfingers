// Общеупотребительные русские слова
export const commonWords: string[] = ["и", "в", "не", "на", "я", "что", "тот", "быть", "с", "а", "весь", "это", "как", "она", "по", "но", "они", "к", "у", "ты", "из", "мы", "за", "вы", "так", "же", "от", "сказать", "этот", "который", "мочь", "человек", "о", "один", "еще", "бы", "такой", "только", "себя", "свой", "какой", "когда", "уже", "для", "вот", "кто", "да", "говорить", "год", "знать", "мой", "до", "или", "если", "время", "рука", "нет", "самый", "ни", "стать", "большой", "даже", "другой", "наш", "свое", "под", "где", "дело", "есть", "сам", "раз", "чтобы", "два", "там", "чем", "глаз", "жизнь", "первый", "день", "тут", "во", "ничто", "потом", "очень", "со", "хотеть", "ли", "при", "голова", "надо", "без", "видеть", "идти", "теперь", "тоже", "стоять", "друг", "дом", "сейчас", "можно", "после", "слово", "здесь", "думать", "место", "спросить", "через", "лицо", "тогда", "ведь", "хороший", "каждый", "новый", "жить", "должный", "смотреть", "почему", "потому", "сторона", "просто", "нога", "сидеть", "понять", "иметь", "конечный", "делать", "вдруг", "над", "взять", "никто", "сделать"];

// Термины программирования на русском
export const programmingWords: string[] = ["код", "функция", "переменная", "класс", "объект", "метод", "массив", "строка", "целое", "логический", "цикл", "условие", "возврат", "импорт", "экспорт", "модуль", "компонент", "пропсы", "состояние", "хук", "асинхронный", "ожидание", "обещание", "обратный вызов", "событие", "слушатель", "рендер", "компиляция", "отладка", "ошибка", "исключение", "попытка", "перехват", "завершение", "нуль", "неопределенный", "интерфейс", "тип", "обобщенный", "алгоритм", "данные", "структура", "стек", "очередь", "дерево", "граф", "рекурсия", "итерация", "область видимости", "замыкание", "прототип", "наследование", "полиморфизм", "инкапсуляция", "абстракция", "шаблон", "дизайн", "архитектура", "фреймворк", "библиотека", "зависимость", "пакет", "npm", "git", "коммит", "ветка", "слияние", "пулл", "пуш", "запрос", "проверка", "тест", "модульный", "интеграция", "развертывание", "сервер", "клиент", "апи", "рест", "графкл", "база данных", "запрос", "схема", "модель", "представление", "контроллер", "промежуточное ПО", "аутентификация", "авторизация", "безопасность", "производительность", "оптимизация", "отзывчивый", "мобильный", "настольный", "браузер", "дом", "виртуальный", "тень", "вебпак", "бабель", "тайпскрипт", "джаваскрипт", "реакт", "вью", "ангуляр", "нода", "экспресс", "монгодб", "скл", "носкл"];

// Научные термины на русском
export const scienceWords: string[] = ["наука", "теория", "гипотеза", "эксперимент", "наблюдение", "данные", "анализ", "исследование", "метод", "доказательство", "заключение", "результат", "переменная", "контроль", "образец", "популяция", "статистика", "вероятность", "корреляция", "причинность", "физика", "химия", "биология", "астрономия", "геология", "экология", "эволюция", "генетика", "молекула", "атом", "элемент", "соединение", "реакция", "энергия", "сила", "движение", "гравитация", "квант", "относительность", "частица", "волна", "свет", "звук", "тепло", "температура", "давление", "объем", "масса", "вес", "плотность", "скорость", "ускорение", "импульс", "трение", "электричество", "магнетизм", "цепь", "ток", "напряжение", "сопротивление", "клетка", "ткань", "орган", "система", "организм", "вид", "экосистема", "биом", "климат", "погода", "атмосфера", "гидросфера", "литосфера", "плита", "тектоника", "землетрясение", "вулкан", "минерал", "порода", "ископаемое", "звезда", "планета", "галактика", "вселенная", "солнечный", "лунный", "космический", "радиация", "спектр", "длина волны", "частота", "ядро", "электрон", "протон", "нейтрон", "изотоп", "ион", "кислота", "основание", "раствор", "растворитель", "растворенное вещество", "концентрация", "фермент", "белок", "углевод", "липид", "нуклеиновый", "кислота", "днк", "рнк", "хромосома", "ген", "аллель", "фенотип", "генотип"];

// Пользовательские слова по умолчанию (пустой массив)
const defaultCustomWords: string[] = [];

/**
 * Получает пользовательские слова из localStorage или использует значение по умолчанию
 * @returns массив пользовательских слов
 */
export const getCustomWords = (): string[] => {
  const savedCustomWords = localStorage.getItem('customWords');
  return savedCustomWords ? JSON.parse(savedCustomWords) : defaultCustomWords;
};

/**
 * Сохраняет пользовательские слова в localStorage
 * @param words - массив слов для сохранения
 */
export const saveCustomWords = (words: string[]): void => {
  localStorage.setItem('customWords', JSON.stringify(words));
};

/**
 * Объект, содержащий все наборы слов
 */
export const wordSets: { [key: string]: string[] } = {
  common: commonWords,
  programming: programmingWords,
  science: scienceWords,
  custom: getCustomWords()
};

// Текущий выбранный набор слов
let currentWordSet = 'common';

/**
 * Устанавливает текущий набор слов и сохраняет его в localStorage
 * @param setName - имя набора слов
 */
export const setWordSet = (setName: string) => {
  if (wordSets[setName]) {
    currentWordSet = setName;
    
    // Обновляем пользовательские слова, если выбран пользовательский набор
    if (setName === 'custom') {
      wordSets.custom = getCustomWords();
    }
    
    // Сохраняем выбранный набор в localStorage
    localStorage.setItem('wordSet', setName);
    
    // Устанавливаем количество слов для практики (не более 100)
    const wordsLength = Math.min(wordSets[setName].length, 100);
    localStorage.setItem('count', String(wordsLength));
  }
};

/**
 * Возвращает имя текущего набора слов
 * @returns имя текущего набора слов
 */
export const getCurrentWordSet = () => {
  return currentWordSet;
};

/**
 * Возвращает слова из текущего набора
 * @returns массив слов из текущего набора
 */
export const getWordsFromCurrentSet = () => {
  // Обновляем пользовательские слова, если выбран пользовательский набор
  if (currentWordSet === 'custom') {
    wordSets.custom = getCustomWords();
  }
  localStorage.setItem('count', String(15));
  return wordSets[currentWordSet];
};

/**
 * Инициализирует набор слов из localStorage при загрузке приложения
 */
export const initWordSet = () => {
  localStorage.setItem('count', String(15));

  const savedWordSet = localStorage.getItem('wordSet');
  if (savedWordSet && wordSets[savedWordSet]) {
    currentWordSet = savedWordSet;
  }
};